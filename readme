backend/
â”œâ”€â”€ config/
â”‚   â”œâ”€â”€ db.js
â”‚   â”œâ”€â”€ jwt.js
â”œâ”€â”€ controllers/
â”‚   â”œâ”€â”€ authController.js
â”‚   â”œâ”€â”€ movieController.js
â”‚   â””â”€â”€ reviewController.js
â”‚   â””â”€â”€ adminController.js
â”œâ”€â”€ middlewares/
â”‚   â”œâ”€â”€ admin.js
â”‚   â”œâ”€â”€ auth.js
â”‚   â””â”€â”€ errorHandler.js
â”œâ”€â”€ routes/
â”‚   â”œâ”€â”€ authRoutes.js
â”‚   â”œâ”€â”€ movieRoutes.js
â”‚   â””â”€â”€ reviewRoutes.js
â”œâ”€â”€ .env
|â”€â”€ index.js
|â”€â”€ schema.sql
â”œâ”€â”€ package.json
â”œâ”€â”€ README.md


Tech Stack
Backend:

Node.js :- Backend runtime
Express.js :- Web framework
PostgreSQL :- Database
Neon :- Cloud-hosted PostgreSQL
JWT :_ Authentication
Bcrypt :- Password hashing
Cors :_ Cross-origin request handling




ðŸš€ Installation & Setup

1. Clone the repository:
git clone https://github.com/dhanrajpimple/movie_review_backend.git


2. Navigate to the backend directory:
cd backend


3. Install dependencies
npm install


4. Set up the database:
add Neon cli in .env file

5. Configure environment variables:
Create a .env file in the backend directory and add:

PORT=5000
JWT_SECRET=your-jwt-secret
DB_URL=postgres://username:password@host:port/database



6. Start the development server:
npm start 


7. backend hosted on render 
